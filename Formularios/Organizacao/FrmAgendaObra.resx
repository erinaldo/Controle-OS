<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="ilFig.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>432, 17</value>
  </metadata>
  <data name="ilFig.ImageStream" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAFdTeXN0ZW0uV2luZG93cy5Gb3JtcywgVmVyc2lvbj00LjAuMC4w
        LCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkFAQAAACZTeXN0
        ZW0uV2luZG93cy5Gb3Jtcy5JbWFnZUxpc3RTdHJlYW1lcgEAAAAERGF0YQcCAgAAAAkDAAAADwMAAABW
        CAAAAk1TRnQBSQFMAgEBAwEAARgBAAEYAQABFAEAARQBAAT/ASEBAAj/AUIBTQE2BwABNgMAASgDAAFQ
        AwABFAMAAQEBAAEgBgABGWYAAzAB/wMwAf8DMAH/AzAB/wMwAf8DMAH/AzAB//8AJQADMAH/AzAB/wMw
        Af8DMAH/AzAB/wMwAf8DMAH/AzAB/+gAAygEPQFnAzMBUgwAAx0BKQM9AWcDPQFnAxABFRAAAzAB/wMw
        Af8DMAH/AzAB/wMwAf8DMAH/AzAB/wMwAf8DMAH/5AABVgFTAVEBmAH/AdwBtgH/AYYBhQF/AcwEAAMd
        ASkDIwE0AksBSgGFAfwB8QHdAf8B7gHkAc8B/wMjATQMAANMAZMDMAH/AzAB/wMwAf8DMAH/AzAB/wMw
        Af8DMAH/AzAB/wMwAf8DMAH/4AABVgFTAVEBmAH/AcwBhQH/AYYBeQFeAcwEAAOGAcsB/wHhAaQC/wHM
        AWMC/wHMAWMC/wHMAWMB/wMjATQMAAMsAfwDMAH/AzAB/wMwAf8DMAH/AzAB/wMwAf8DMAH/AzAB/wMw
        Af8DMAH/A0kBidwAAxYBHgFLAUoBSQGEAd0BsgFeAfUBhgF5AV4BzAHdAbgBcgH1Af8B0AFvAv8BzAFj
        Av8BzAFjAv8BzAFjAf8DIwE0DAADNwFaAzAB/wMwAf8DMAH/AzAB/wMwAf8EAAMwAf8DMAH/AzAB/wNJ
        AYkwAAM1AVc0AAMOARN0AAM4AVsBegF3AXMBwgH/AeUBsAL/AcwBYwL/AcwBYwL/AcwBYwL/AcwBYwL/
        AcwBYwL/AcwBYwH/AyMBNBAAAzAB/wMwAf8DMAH/AzAB/wMwAf8DUAG8BAADSwHdA0UBfTQAAUQCQwHO
        NAABDgEMAQ0B+WgAAxABFQM9AWcDPQFnAXcBcwFqAcEBlQGQAYgB1gFWAVUBVAGYAVYBUwFPAZgBuwGh
        AWMB6gH/AcwBYwL/AcwBYwL/AcwBYwL/AcwBYwH/AUwCSwGGAx0BKRAAAzAB/wMwAf8DMAH/AzAB/wMw
        Af8DCgENA0IBdAMuAUg0AAMUARsIAAM3AVsoAANJAb5gAAMWAR8DIwE0AzgBXAHzAcoBmQH/Af0BzAFt
        Av8BzAFjAf8BZgFhAVcBrgMjATQDIwE0AZUBhAFnAdYB/gHMAWgC/wHMAWMC/wHMAWMC/wHMAWMB/wGV
        AZABiwHWAzMBUhQAAzAB/wMwAf8DMAH/AzAB/wNFAX4DMgH+AzAB/wMuAUgsAANLAaMIAAM6AWEkAAM6
        AdoEAAENAgwB+QEOAQwBDQH5XAADVQGYAfcB4gG6Av8BzAFjAv8BzAFjAv8BzAFjAv8BzAFjAv8BzAFj
        Av8B0gF3Av8B7AHMAf8B8wHRAa4B/wH5AcsBgAL/AcwBYwL/AcwBYwL/AcwBYwH/AyMBNBwAAzAB/wMw
        Af8DSQGJCAADMAH/AzAB/wMuAUjIAAMWAR4DIwEzAzgBXAH/AcwBYwL/AcwBYwL/AcwBYwL/AcwBYwL/
        Ac0BZwL/AdIBdwH/Af0BzQFxAf8B/gHMAWgC/wHMAWMC/wHMAWMC/wHMAWMB/wGYAYUBbwHXAzMBUhwA
        A0kBiRAAAzMB/gMwAf8DLwFJJAADSAGKOAABNwE0ATYB3gNLAZVkAAMPARQCPQE8AWYCPQE8AWYBdwFu
        AVsBwQH/AcwBYwL/AcwBYwL/AcwBYwL/AcwBYwL/AcwBYwL/AcwBYwL/AcwBYwL/AcwBYwL/AcwBcwH/
        Az0BZzQAAzMB/gMwAf8DMAFMPAABMgEuATEB45QAATgCNwFbAVYBUwFPAZgBZQFhAVcBrQH/AcwBYwL/
        AcwBYwL/AcwBYwL/AcwBYwL/AcwBYwL/AcwBYwL/AcwBYwH/Az0BZzgAAzkB+QMwAf8DLwFJLAADTAGs
        CAABMgEuATEB4wwAAR8BHQEeAe+MAAMdASkBhgF3AV0BywGGAXcBXQHLAbsBoAFjAeoB/wHMAWMC/wHM
        AWMC/wHMAWMC/wHMAWMB/wM9AWc8AAMzAf4DMAH/Ay4BSCwAA0sBowNJAZADFwHzA0kBkANJAZADNwHc
        nAABVgFTAU8BmAH/AcwBYwL/AcwBYwL/AcwBYwL/AcwBYwH/Az0BZ0AAAzAB/wMwAf8DMAH/AzAB/wMw
        Af8DMAH/0AADFgEeAyMBMwM4AVwB/wHMAWMC/wHMAWMB/wGqAZ4BiQHhA0cBe0AAAzAB/wMwAf8DMAH/
        AzAB/wMwAf/YAAMPARQCPQE8AWYCPQE8AWYCdwFzAcEDVwGZQAADMAH/A1EBwAMyAVADMAH/AzAB/+QA
        AzgBWwM4AVtAAAMwAf8DNAH2AzAB/wM5Afn/ADEAAzAB/wMwAf8DMAH7/wA5AANJAYmsAAFCAU0BPgcA
        AT4DAAEoAwABUAMAARQDAAEBAQABAQUAAfAXAAP/AQAC/wH4AQ8D/wHwBAAC/wH4AQcD/wHwBAAB/gE4
        AXgBAwP/AfAEAAH+ASABcAEBA/8B8AQAAf4BIAFwAQAD/wHwBAAB/gEAAXABIQH/Ae8B/wGwBAAB/gEA
        AXgBEwH/Ae8B/wGwBAAB8AEAATwBAwH/Ae0B/wGwBAABwAEAAT4BAQH/AdsB/gGQBAABwAEAAX8BGAP/
        AfAEAAHAAQABPwG8AX8B3wH/AZAEAAHwAQABPwH+AT8B/wG/AfAEAAH+AQABPwH/AR8B/QG7AfAEAAH/
        AYABPwH/AY8B/gEHAfAEAAH/AfABPwH/AcAC/wHwBAAB/wHwAR8B/wHgAv8B8AQAAf8B/AEfAf8B4AL/
        AfAEAAL/AZ8B/wHhAv8B8AQABP8B4wL/AfAEAAT/AfcC/wHwBAAL
</value>
  </data>
  <metadata name="tmPopularCalendario.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>265, 17</value>
  </metadata>
</root>